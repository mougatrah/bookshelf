{"version":3,"sources":["logo.svg","components/SearchBar/index.js","components/Header/index.js","components/BookPreview/index.js","components/BookDisplay/index.js","components/Home/index.js","components/View/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SeachBar","react_default","a","createElement","onSubmit","this","props","className","onChange","type","Component","Header","src","logo","alt","BookPreview","target","rel","href","link","onClick","handleSave","title","author","description","BookDisplay","_this","books","map","book","index","components_BookPreview","key","volumeInfo","authors","pop","imageLinks","thumbnail","infoLink","id","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bookResults","searchTerm","handleSearchChange","bind","assertThisInitialized","handleSearchSubmit","search","_this2","axios","get","then","results","setState","data","items","e","preventDefault","console","log","parentNode","childNodes","innerHTML","post","header","method","url","crossDomain","params","response","catch","err","value","keys","Books","components_BookDisplay","components_Header","SearchBar","Saved","App","BrowserRouter","Switch","Route","exact","path","component","View","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oSCezBC,mLATP,OACIC,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKC,MAAMF,SAAUG,UAAU,OAC3CN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,QAAQC,SAAUH,KAAKC,MAAME,WAC9CP,EAAAC,EAAAC,cAAA,UAAQI,UAAU,+BAA+BE,KAAK,UAAtD,kBAPOC,8BCeRC,mLAVP,OACIV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YAAd,eACAN,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAMC,IAAI,OAAOP,UAAU,sBAPhCG,aC2BNK,0LArBP,OACId,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACxBN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAWS,OAAO,SAASC,IAAI,sBAAsBC,KAAMb,KAAKC,MAAMa,MAAnF,QAEiBlB,EAAAC,EAAAC,cAAA,UAAQI,UAAU,WAAWa,QAASf,KAAKC,MAAMe,YAAjD,QAKJpB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAcF,KAAKC,MAAMgB,OACxCrB,EAAAC,EAAAC,cAAA,aAAQE,KAAKC,MAAMiB,QACnBtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAUO,IAAKT,KAAKC,MAAMgB,MAAOV,IAAKP,KAAKC,MAAMM,MAEhEX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAaF,KAAKC,MAAMkB,qBAhB7Bd,cCoBXe,mLArBF,IAAAC,EAAArB,KAgBL,OAfeA,KAAKC,MAAMqB,MAAMC,IAAI,SAACC,EAAMC,GAC5C,OAAQ7B,EAAAC,EAAAC,cAAC4B,EAAD,CACCC,IAAKF,EACLT,WAAYK,EAAKpB,MAAMe,WACvBC,MAAOO,EAAKI,WAAWX,MACvBC,OAAQM,EAAKI,WAAWC,QAAQC,MAChCX,YAAaK,EAAKI,WAAWT,YAC7BZ,IAAKiB,EAAKI,WAAWG,WAAWC,UAChClB,KAAMU,EAAKI,WAAWK,SAEtBxB,IAAK,qBAAuBe,EAAKI,WAAWX,MAE5CiB,GAAIV,EAAKU,cAfC7B,8BCoFX8B,cAhFX,SAAAA,EAAYlC,GAAO,IAAAoB,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAApC,KAAAmC,IACfd,EAAAe,OAAAE,EAAA,EAAAF,CAAApC,KAAAoC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAxC,KAAMC,KAEDwC,MAAQ,CACXC,YAAa,KACbC,WAAY,gBAGdtB,EAAKuB,mBAAqBvB,EAAKuB,mBAAmBC,KAAxBT,OAAAU,EAAA,EAAAV,CAAAf,IAC1BA,EAAK0B,mBAAqB1B,EAAK0B,mBAAmBF,KAAxBT,OAAAU,EAAA,EAAAV,CAAAf,IAC1BA,EAAKL,WAAaK,EAAKL,WAAW6B,KAAhBT,OAAAU,EAAA,EAAAV,CAAAf,IAClBA,EAAK2B,OAAS3B,EAAK2B,OAAOH,KAAZT,OAAAU,EAAA,EAAAV,CAAAf,IAXCA,wEAeV,IAAA4B,EAAAjD,KACPkD,IAAMC,IAAI,iDAAmDnD,KAAKyC,MAAME,YAAYS,KAAK,SAACC,GAAD,OAAaJ,EAAKK,SAAS,CAACZ,YAAaW,EAAQE,KAAKC,MAAOb,WAAY,0CAGzJc,GACPA,EAAEC,iBACJC,QAAQC,IAAIH,EAAE9C,OAAOkD,WAAWC,WAAW,GAAGC,WAE9Cb,IAAMc,KAAK,CACTC,OAAQ,8BACRC,OAAQ,OACRC,IAAK,aACLC,aAAa,EACbC,OAAQ,CACJvD,KAAM2C,EAAE9C,OAAOkD,WAAWC,WAAW,GAAGjD,KACxCI,MAAOwC,EAAE9C,OAAOkD,WAAWC,WAAW,GAAGC,aAE5CX,KAAK,SAASkB,GACbX,QAAQC,IAAIU,KACbC,MAAM,SAASC,GACdb,QAAQC,IAAIY,iDAKjBxE,KAAKgD,oDAGaS,GAEjBzD,KAAKsD,SAAS,CACZX,WAAYc,EAAE9C,OAAO8D,mDAINhB,GACjBA,EAAEC,iBACF1D,KAAKgD,0CAOH,GAAGhD,KAAKyC,MAAMC,YAAY,CACtBiB,QAAQC,IAAIxB,OAAOsC,KAAK1E,KAAKyC,MAAMC,YAAY,GAAGd,YAAc5B,KAAKyC,MAAMC,YAAY,GAAGd,WAAWK,UACrG,IAAI0C,EAAU/E,EAAAC,EAAAC,cAAC8E,EAAD,CACR5D,WAAYhB,KAAKgB,WACjBM,MAAOtB,KAAKyC,MAAMC,cAK5B,OACI9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,MAEIH,UA1EDtE,aCOJ0E,mLAPP,OADApB,QAAQC,IAAI5D,KAAKC,OAEbL,EAAAC,EAAAC,cAAA,2BALQO,aC8BL2E,mLApBX,OAGEpF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC3F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,cAd7B9B,aCMEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC","file":"static/js/main.2edad597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8033f60e.svg\";","import React, { Component } from 'react';\r\n\r\nclass SeachBar extends Component {\r\n    \r\n   \r\n    render(){\r\n        return (\r\n            <form onSubmit={this.props.onSubmit} className=\"row\">\r\n                <input className=\"col-8\" onChange={this.props.onChange}></input>\r\n                <button className=\"btn btn-primary col-4 m-auto\" type=\"submit\">Search</button>            \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeachBar;","import React, { Component } from \"react\";\r\nimport logo from \"../../../src/logo.svg\";\r\n\r\nclass Header extends Component {\r\n  \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"row\">\r\n                <h3 className=\"logoText\">Book Search</h3>\r\n                <img src={logo} alt=\"logo\" className=\"img col-4\" />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\n// import axios from 'axios';\r\n// import Button from '../Button';\r\n\r\nimport \"./style.css\"\r\nclass BookPreview extends Component {\r\n    render() {\r\n \r\n        return (\r\n            <div className=\"bookPrev\">\r\n   <a className=\"myButton\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link} >View</a>\r\n\r\n                    <button className=\"myButton\" onClick={this.props.handleSave}>Save</button>\r\n                \r\n              \r\n\r\n\r\n                <div className=\"bookTitle\" >{this.props.title}</div>\r\n                <small>{this.props.author}</small>\r\n                <img className=\"bookImg\" alt={this.props.title} src={this.props.src}></img>\r\n\r\n                <div className=\"bookDesc\" >{this.props.description}</div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookPreview;","import React, { Component } from \"react\";\r\nimport BookPreview from '../BookPreview';\r\n\r\nclass BookDisplay extends Component {\r\n\r\n    render() {\r\n       var newBooks =  this.props.books.map((book, index) => {\r\n       return (<BookPreview\r\n                key={index}\r\n                handleSave={this.props.handleSave}\r\n                title={book.volumeInfo.title}\r\n                author={book.volumeInfo.authors.pop()}\r\n                description={book.volumeInfo.description}\r\n                src={book.volumeInfo.imageLinks.thumbnail}\r\n                link={book.volumeInfo.infoLink}\r\n\r\n                alt={\"The bookcover for \" + book.volumeInfo.title}\r\n               \r\n                id={book.id}\r\n                />)\r\n            });\r\n        return (newBooks);\r\n\r\n}\r\n}\r\n\r\nexport default BookDisplay","import React, { Component } from 'react';\r\nimport SearchBar from \"../SearchBar\";\r\nimport Header from \"../Header\";\r\nimport BookDisplay from \"../BookDisplay\";\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n  \r\n        this.state = {\r\n          bookResults: null,\r\n          searchTerm: \"Harry Potter\"\r\n        }\r\n  \r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.search = this.search.bind(this);\r\n  \r\n      }\r\n  \r\n    search() {\r\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.searchTerm).then((results) => this.setState({bookResults: results.data.items, searchTerm: \"\"}))\r\n    }\r\n  \r\n    handleSave(e) {\r\n        e.preventDefault();\r\n      console.log(e.target.parentNode.childNodes[2].innerHTML)\r\n\r\n      axios.post({\r\n        header: \"Access-Control-Allow-Origin\",\r\n        method: 'POST',\r\n        url: './API/save',\r\n        crossDomain: true,\r\n        params: {\r\n            link: e.target.parentNode.childNodes[0].href,\r\n            title: e.target.parentNode.childNodes[2].innerHTML\r\n        }\r\n      }).then(function(response) {\r\n          console.log(response);\r\n      }).catch(function(err){\r\n          console.log(err);\r\n      });\r\n    }\r\n  \r\n    componentDidMount() { \r\n     this.search();\r\n    }\r\n  \r\n    handleSearchChange(e){\r\n  \r\n      this.setState({\r\n        searchTerm: e.target.value\r\n      });\r\n\r\n    }\r\n    handleSearchSubmit(e){\r\n      e.preventDefault();\r\n      this.search();\r\n  \r\n     \r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.bookResults){\r\n            console.log(Object.keys(this.state.bookResults[0].volumeInfo) + this.state.bookResults[0].volumeInfo.infoLink);\r\n            var Books =   <BookDisplay \r\n                  handleSave={this.handleSave}\r\n                  books={this.state.bookResults}\r\n              />\r\n\r\n           \r\n          }\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                <SearchBar />\r\n                {\r\n                    Books\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Saved extends Component {\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>Saved</div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Saved;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./components/Home\";\nimport View from \"./components/View\";\n\nclass App extends Component {\n\n  render() {\n    \n      \n\n    return (\n\n\n      <div className=\"App\">\n       \n          <Router>\n            <Switch>\n              <Route exact path=\"/saved\" component={View} />\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n\n          </Router>\n        \n         \n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}